package member.controller;

import java.io.IOException;
import java.sql.Date;
import java.util.Calendar;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import member.model.service.MemberService;
import member.model.vo.Member;

/**
 * Servlet implementation class memberUpdateservlet
 */
@WebServlet("/member/memberUpdate")
public class memberUpdateServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	//1.encoding처리 
		//제출된 폼의 사용자입력값은 모두 String이므로 유의할 것.
		request.setCharacterEncoding("utf-8");
		//2.사용자입력갑 처리
		//아이디
		String memberId =request.getParameter("memberId");
		//비밀번호
		String password =request.getParameter("password");
		//이름
		String memberName =request.getParameter("memberName");
		//성별
		String  gender =request.getParameter("gender");
		//생년월일
		String birthday =request.getParameter("birthday");
		//이메일
		String email =request.getParameter("email");
		//휴대폰
		String phone =request.getParameter("phone");
		//주소
		String address =request.getParameter("address");
		//취미 5개를 담기위해 
		String[] hobbies = request.getParameterValues("hobby");
		//hobby컬럼은 , (컴마) 기준으로 하나의 문자열로 합쳐서 처리할 것.
		String hobby = "";
		//현재 날짜가져오기
		//Calender 날짜가져오기 
		Date enrollDate =new Date(Calendar.getInstance().getTimeInMillis());

		
		//각 요소 사이에 지정된 구분 기호를 사용하여 개체 배열의 요소를 연결합니다.
		//	hobby컬럼은 , (컴마) 기준으로 하나의 문자열로 합쳐서 처리할 것.
		if(hobbies != null) hobby = String.join(",", hobbies);
	//String 메서드를 입력받은 문자열 값을  Date로 변경 
				Date birthday_ = null;
				if(birthday != null && !"".equals(birthday))
					birthday_ = Date.valueOf(birthday);
			//상수 사용할것. member_role은 기본값 U 로 처리
			//상수 처리  MemberService.MEMBER_ROLE  상수처리 해야한다.
		Member member= new  Member(memberId,password,memberName, MemberService.MEMBER_ROLE,gender,birthday_,email,phone,address,hobby,enrollDate);
		System.out.println("member@Servlet"+member) ;
		int result = new MemberService().insertMember(member);
		//세션무효화 : 세션에 저장된 속성값을 모두 폐기
		//만약 세션이 존재하지 않으면, 새로 만들지 않고, null을 리턴.
		HttpSession session = request.getSession(true);
		if(result >0) {
			System.out.println("회원가입 성공!");
			session.setAttribute("msg","회원가입에 성공!");
		}else {
			System.out.println("회원가입 실패!");
			session.setAttribute("msg","회원가입에 실패!");
		}
		//지정한 페이지 로 이동 
				response.sendRedirect(request.getContextPath());
		
	}
}
