<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="student">
	<!-- 값전달시 #{getter에서 get을 제외하고, 소문자로 시작하는 이름} OGNL방식 -->
	<insert id="insertStudent" parameterType="student">
	insert into
			student(no, name, tel)
		values(
			seq_student_no.nextval,
			#{name},
			#{tel}
		)
	</insert>
	<!-- Map을 전달시에 키값을 그래도 받는다 . -->
	<insert id="insertStudentMap" parameterType="map">
	insert into
			student(no, name, tel)
		values(
			seq_student_no.nextval,
			#{name},
			#{tel}
		)
	</insert>
	<!-- Select태그의 resultType/resultMap은 필수속성이다. 둘중 하나는 반드시 작성   -->
	<select id="selectStudentCount" resultType="_int">
	select 
		count(*)
	from
		 student
	</select>
	<!-- resultset을 mybatis 가 자동으로 vo 매핑 해준다. 
		 1.동일한 이름의 setter 를 통해 값대입
		 2.자동형 변환처리 
		 	varchar2 ,char -> String
		 	number -> int/double
		 		date -> java.util.date
		 		 
		 		 필드명 불일치 시
		 		 1.query alias 지정 - 대소문자 구분위해 "" 필수
		 		 	select reg_date "regDate" ...
		 		 	첫번째 방법
		 		 		<select id="selectOneStudent" resultType="student">
					select
						no,
						name,
						tel,
						reg_date "regDate"
					from 
						student
					where
						no = #{no}
					</select>
		 		 2.형변환처리를 임의 로 지정
		 		 
		 		 -colum 과 ProPerty가 동일하다면, 해당자식태그는 생략가능
		 		 -resultMap은 재사용이 가능하다.
		 		 
		 		 3. mybatis-config.xml의 setting태그 mapUnderscoreToCamelCase true 설정
		 			-->
<!-- 	<select id="selectOneStudent" resultMap="studentVoMap">
		select
			*
		from 
			student
		where
			no = #{no}
	</select> -->
		<select id="selectOneStudent" resultType="student">
		select
			*
		from 
			student
		where
			no = #{no}
	</select>
	<!--  -->
	<resultMap type="student" id="studentVoMap">
	<id column="no" property="no"/>	<!-- pk컬럼용 -->
	<!-- 나머지 컬럼용 -->
	<result column="name" property="name"/>
	<result column="tel" property="tel"/>
	<!-- 생략불가능  -->
	<result column="reg_date" property="regDate"/>
	</resultMap>
	<!-- 
		비동기 통신
		1.첫번째 방법 
	<select id="selectOneStudentMap" resultType="hashmap">
	select
		no "no",
			name "name",
			tel "tel",
			reg_date "regDate"
	from
		student
	where
	 no =#{no}	
	</select>
	 -->
	<select id="selectOneStudentMap" resultMap="studentMap">
		select
		*
		from
		student
			where 
			no=#{no}	
	</select>
	<resultMap type="map" id="studentMap">
	<id column="no" property="no"/>
	<!-- property 대소문자 구분함 -->
	<result column="name" property="name"/>
	<result column="tel" property="tel"/>
	<result column="reg_date" property="regDate"/>
	</resultMap>
	
		<update id="updateStudent">
		update
			student
		set
			name = #{name},
			tel = #{tel}
		where 
			no = #{no}
	</update>
	<delete id="deleteStudent">
		delete from
			student
		where 
			no = #{no}
	</delete>
	
	<select id="selectStudentList" resultType="student">
		select
		 	*
		 	from
		 	student
		 	order by
		 	 no desc
	</select>
	<select id="selectStudentMapList" resultMap="studentMap">
		select
		 *
		 from
		 student
		 order by
		 no desc
	</select>
		
</mapper>